[{"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\index.js":"1","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\App.js":"2","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\registerServiceWorker.js":"3","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Contact.js":"4","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Footer.js":"5","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\About.js":"6","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Resume.js":"7","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Header.js":"8","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Portfolio.js":"9"},{"size":254,"mtime":1628050241000,"results":"10","hashOfConfig":"11"},{"size":888,"mtime":1628050241000,"results":"12","hashOfConfig":"11"},{"size":4021,"mtime":1628050241000,"results":"13","hashOfConfig":"11"},{"size":5694,"mtime":1631966706498,"results":"14","hashOfConfig":"11"},{"size":983,"mtime":1633985085998,"results":"15","hashOfConfig":"11"},{"size":1774,"mtime":1632944411732,"results":"16","hashOfConfig":"11"},{"size":4350,"mtime":1632944088548,"results":"17","hashOfConfig":"11"},{"size":2227,"mtime":1628050241000,"results":"18","hashOfConfig":"11"},{"size":1362,"mtime":1633984374650,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"zcd2b7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\index.js",[],["41","42"],"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\App.js",[],"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\registerServiceWorker.js",[],"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Contact.js",["43","44"],"import React, { useState } from \"react\";\nimport Fade from \"react-reveal/Fade\";\n// import { db } from \"../firebase\";\n// import firebase from \"firebase\";\n\nconst Contact = ({ data }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [success, setSuccess] = useState();\n  const [error, setError] = useState();\n\n  if (data) {\n    var contactName = data.name;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var contactEmail = data.email;\n    var contactMessage = data.contactmessage;\n  }\n\n  const submitForm = (e) => {\n    window.open(\n      `mailto:${contactEmail}?subject=${encodeURIComponent(\n        subject\n      )}&body=${encodeURIComponent(name)} (${encodeURIComponent(\n        email\n      )}): ${encodeURIComponent(message)}`\n    );\n     e.preventDefault();\n  //   db.collection(\"feedbacks\")\n  //     .add({\n  //       name: name,\n  //       email: email,\n  //       subject: subject,\n  //       message: message,\n  //       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n  //     })\n  //     .then(() => {\n  //       setName(\"\");\n  //       setEmail(\"\");\n  //       setSubject(\"\");\n  //       setMessage(\"\");\n  //       console.log(\"Your message was sent, thank you!\");\n  //       setSuccess(true);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //       setError(true);\n  //     });\n  };\n\n  return (\n    <section id=\"contact\">\n      <Fade bottom>\n        <div>\n          <div className=\"row section-head\">\n            <div className=\"two columns header-col\">\n              <h1>\n                <span>Get In Touch.</span>\n              </h1>\n            </div>\n\n            <div className=\"ten columns\">\n              <p className=\"lead\">{contactMessage}</p>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"eight columns\">\n              <form onSubmit={submitForm}>\n                <fieldset>\n                  <div>\n                    <label htmlFor=\"contactName\">\n                      Name <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      value={name}\n                      size=\"35\"\n                      id=\"contactName\"\n                      name=\"contactName\"\n                      onChange={(e) => setName(e.target.value)}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactEmail\">\n                      Email <span className=\"required\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      value={email}\n                      size=\"35\"\n                      id=\"contactEmail\"\n                      name=\"contactEmail\"\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactSubject\">Subject</label>\n                    <input\n                      type=\"text\"\n                      defaultValue=\"\"\n                      value={subject}\n                      size=\"35\"\n                      id=\"contactSubject\"\n                      name=\"contactSubject\"\n                      onChange={(e) => setSubject(e.target.value)}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"contactMessage\">\n                      Message <span className=\"required\">*</span>\n                    </label>\n                    <textarea\n                      cols=\"20\"\n                      rows=\"10\"\n                      value={message}\n                      onChange={(e) => setMessage(e.target.value)}\n                      id=\"contactMessage\"\n                      name=\"contactMessage\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <button\n                      onClick={submitForm}\n                      type=\"submit\"\n                      className=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </fieldset>\n              </form>\n\n              <div id=\"message-warning\"> Error boy</div>\n              <div id=\"message-success\">\n                <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n                <br />\n              </div>\n            </div>\n            {error ? <div className=\"error\">Error boy</div> : \"\"}\n            {success ? (\n              <div className=\"success\">\n                <i className=\"fa fa-check green\"></i>Your message was sent, pls wait for our reply. thank you!\n              </div>\n            ) : (\n              \"\"\n            )}\n            <aside className=\"four columns footer-widgets\">\n              <div className=\"widget widget_contact\">\n                <h4>Address and Phone</h4>\n                <p className=\"address\">\n                  {contactName}\n                  <br />\n                  {contactEmail}\n                  <br />\n                  <br />\n                  {street} <br />\n                  {city}, {state} {zip}\n                  <br />\n                  <span>{phone}</span>\n                </p>\n              </div>\n            </aside>\n          </div>\n        </div>\n      </Fade>\n    </section>\n  );\n};\n\nexport default Contact;\n","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Footer.js",[],"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\About.js",[],"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Resume.js",["45"],"import React, { useEffect, useState } from \"react\";\nimport Rotate from 'react-reveal/Rotate';\n\nconst Resume = ({ data }) => {\n  const [isScrolled, setIsScrolled] = useState(\"\");\n  useEffect(() => {\n    // if scrolling passed 80px from the top\n    const toggleScrolled = () => {\n      window.scrollY >= 1300 ? setIsScrolled(true) : setIsScrolled(false);\n    };\n    window.addEventListener(\"scroll\", toggleScrolled);\n    return () => {\n      window.removeEventListener(\"scroll\", toggleScrolled);\n    };\n  }, []);\n  // if (isScrolled === true) {\n  //   document.getElementById(\"skills\").classList.add(\"animate\")\n  // }\n  if (data) {\n    var css = \"images/icons/css.png\";\n    var html = \"images/icons/html.png\";\n    var firebase = \"images/icons/firebase.png\";\n    var github = \"images/icons/github.png\";\n    var npmjs = \"images/icons/npmjs.png\";\n    var reactjs = \"images/icons/reactjs.png\";\n    var vscode = \"images/icons/vscode.png\";\n    var javascript = \"images/icons/javascript.png\";\n    var tailwindcss = \"images/icons/tailwindcss.png\";\n    var python = \"images/icons/python.png\";\n    var golang = \"images/icons/golang.png\";\n    var solidity = \"images/icons/solidity.png\";\n\n    var education = data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree}\n\n            {/*<em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p> */}\n          </p>\n        </div>\n      );\n    });\n    // var work = data.work.map(function (work) {\n    //   return (\n    //     <div key={work.company}>\n    //       <h3>{work.company}</h3>\n    //       <p className=\"info\">\n    //         {work.title}\n    //         <span>&bull;</span> <em className=\"date\">{work.years}</em>\n    //       </p>\n    //       <p>{work.description}</p>\n    //     </div>\n    //   );\n    // });\n  }\n\n  return (\n    <section id=\"resume\">\n      <Rotate bottom left>\n      <div className=\"row education\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Education</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <div className=\"row item\">\n            <div className=\"twelve columns\">{education}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"row work\">\n        <div className=\"three columns header-col\">\n        <h1>\n        <span>Work</span>\n        </h1>\n        </div>\n        \n        <div className=\"nine columns main-col\">{work}</div>\n      </div> */}\n\n      <div className=\"row skill\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Skills / tools i use</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns skills main-col\">\n          <div className=\"skill\">\n            <img className=\"html\" src={html} alt=\"html\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"css\" src={css} alt=\"css\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"javascript\" src={javascript} alt=\"javascript\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"reactjs\" src={reactjs} alt=\"reactjs\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"tailwindcss\" src={tailwindcss} alt=\"tailwindcss\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"firebase\" src={firebase} alt=\"firebase\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"github\" src={github} alt=\"github\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"npmjs\" src={npmjs} alt=\"npmjs\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"vscode\" src={vscode} alt=\"vscode\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"vscode\" src={solidity} alt=\"solidity\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"vscode\" src={golang} alt=\"golang\" />\n          </div>\n          <div className=\"skill\">\n            <img className=\"python\" src={python} alt=\"python\" />\n          </div>\n        </div>\n      </div>\n        </Rotate>\n    </section>\n  );\n};\n\nexport default Resume;","C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Header.js",[],"C:\\Users\\user\\Desktop\\resume-main\\resume-main\\src\\Components\\Portfolio.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":11,"column":19,"nodeType":"52","messageId":"53","endLine":11,"endColumn":29},{"ruleId":"50","severity":1,"message":"54","line":12,"column":17,"nodeType":"52","messageId":"53","endLine":12,"endColumn":25},{"ruleId":"50","severity":1,"message":"55","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":20},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'setSuccess' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'isScrolled' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]